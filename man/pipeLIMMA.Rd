% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pipeLIMMA.R
\name{pipeLIMMA}
\alias{pipeLIMMA}
\title{A pipeline for LIMMA.}
\usage{
pipeLIMMA(counts, info, formula = NULL, contrast.matrix = NULL,
  block = NULL, design = NULL, runVoom = TRUE,
  use.qualityWeights = TRUE, use.topTable = FALSE, geneIDs = NA,
  verbose = TRUE, plotVoom = FALSE, ...)
}
\arguments{
\item{counts}{A count matrix}

\item{info}{An experimental design matrix}

\item{formula}{A character string that can be coerced to a formula. Specify if a contrast
model is not desired.}

\item{contrast.matrix}{A matrix of contrasts, usually created by a call
from limma:makeContrasts. Used only when limma:contrast.fit is intended as the statistical
modeling function. NULL values force a traditional test of effects via limma::lmFit/ebayes.}

\item{block}{A string that represents an individual that was repeatedly measured,
if NULL, runs the analysis without a blocking / duplicate correlation factor}

\item{design}{A design matrix, usually created by a call from "model.matrix". Used only if
limma:contrast.fit is intended as the statistical modeling function. NULL values force
a traditional test of effects via limma::lmFit/ebayes.}

\item{runVoom}{Logical, if TRUE, normalizes the counts matrix via voom. If FALSE,
assumes the counts matrix is already voom-normalized. Pre-running voom will speed up
analyses with multiple pipeLIMMA calls.}

\item{use.qualityWeights}{Logical, run voom with quality weights or not?}

\item{use.topTable}{Logical, report F-statistics across all factors? If true,
a third element is returned called fstats.}

\item{geneIDs}{The names of genes. If NA, use row names from counts matrix}

\item{verbose}{Logical, return progress updates?}

\item{plotVoom}{Logical, plot the voom fit? Defaults to FALSE}

\item{...}{additional arguments, not currently in use.}
}
\value{
a list with 2 elements (if simple=TRUE)
\itemize{
 \item{"stats"}{: the statsistics generated from ebayes and topTable}
 \item{"voom"}{: the voom normalized counts data}
 \item{"fstats"}{: if a formula is provided,
 the toptable returned fstatsistics across all estimates of each factor}
}
}
\description{
\code{pipeLIMMA} Run a pipeline of LIMMA functions for differential gene expression.
}
\details{
This function runs the following pipeline:
\itemize{
 \item{1. }{calculate normalization factors via edgeR::calcNormFactors}
 \item{2. }{Run limma::voom transformation}
 \item{3. }{Run limma:lmFit linear modeling}
 \item{4. }{Run limma::ebayes statistical modeling}
 \item{5. }{Collect Log2 Fold-Changes using limma:topTable}
 \item{6. }{Collate and ouput statistics and voom transformed data}
}
}
\examples{
\dontrun{
data(kidney) # from simseq
counts<-kidney$counts
counts<-counts[sample(1:nrow(counts),1000),]
info<-data.frame(rep=kidney$replic,
                 treatment=kidney$treatment)
stats<-pipeLIMMA(counts=counts,
                 info=info,
                 formula = " ~ treatment",
                 block=info$rep)
stats<-pipeLIMMA(counts=counts,
                 info=info,
                 formula = " ~ treatment",
                 block=NULL)
}
}
